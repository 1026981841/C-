#define _CRT_SECURE_NO_WARNINGS
#include<cstdio>
#include<cctype>
#include<cstring>
#include<cstdlib>
#include"io.h"
#include"foo.h"
#include"structs.h"

void init() {
	//something
}

void standby() {
	printf("Press c to continue or q to quit\n");
	char c = 0;
	while(!c) {
		do {
			c = getchar();
		} while(isspace(c));
		if(!c)
			illegal_input_error(-1);
		else {
			c = tolower(c);
			if(c != 'c' && c != 'q') {
				illegal_input_error(0);
				c = 0;
			}
			if(c == 'q')
				exit(0);
			if(c == 'c') {
				//nothing
			}
		}
	}
}

int tourist_login() {
	system("cls");

	char ID[11], pwd[11];
	read_tourist_id(ID);
	read_tourist_pwd(pwd);

	bool ok = tourist_login_chk(ID, pwd);
	if(!ok) {
		printf("ID or password error!\n");
		standby();
		return 0;
	}

	//something
}

int welcome_tourist(Visitor *fv) {
	print_stars();
	printf("Welcome back, %s !\n", fv->ID);
	print_stars();
	standby();
	system("cls");

	print_stars();
	printf("What would you like to do?\n");
	print_stars();
	printf("\n\n");

	printf("Please select your choice:\n");
	printf("a)Query attractions\n"
	"b)Sort and display attractions\n"
		   "q)Quit");

	int id = read_tourist_choice();
	while(id == 0 || id == 3) {
		if(id == 0) {
			illegal_input_error(-1);
		}
		if(id == 3) {
			illegal_input_error(0);
		}
		id = read_tourist_choice();
	}
	if(id == -1)
		return -1;

	if(id == 1) {
		return query();
	}
	if(id == 2) {
		return Sort();
	}
}

int admin_login() {
	system("cls");

	char ID[11], pwd[11];
	read_admin_id(ID);
	read_admin_pwd(pwd);

	bool ok = admin_login_chk(ID, pwd);
	if(!ok) {
		printf("ID or password error!\n");
		standby();
		return 0;
	}

	return welcome_admin();
}

int welcome_admin() {
	//something
	return 0;
}

int welcome() {//-1: quit, 0: again
	system("cls");

	print_stars();
	printf("Welcome to group tourists attractions booking system!\n");
	print_stars();

	printf("Please select your identification:\n"
		   "a) Tourist\n"
		   "b) Administration\n"
		   "q) quit\n");

	int id = read_identification();
	while(id == 0 || id == 3) {
		if(id == 0) {
			illegal_input_error(-1);
		}
		if(id == 3) {
			illegal_input_error(0);
		}
		id = read_identification();
	}
	if(id == -1)
		return -1;

	if(id == 1) {
		return tourist_login();
	}
	if(id == 2) {
		return admin_login();
	}
}

int query() {
	system("cls");
	print_stars();
	printf("You want to query by?\n");
	print_stars();
	printf("\n\n");

	printf("a)Attaractions' names\n"
		   "b)Wether tickets available\n"
		   "c)View spot\n"
		   "q)Quit\n");
	int id = read_query_choice();
	while(id == 0 || id == 4) {
		if(id == 0) {
			illegal_input_error(-1);
		}

		if(id == 4) {
			illegal_input_error(0);
		}
		id = read_query_choice();
	}
	if(id == -1)
		return -1;

	if(id == 1) {

	}
	if(id == 2) {

	}
	if(id == 3) {

	}

	return -1;
}

int Sort() {
	//something
	return -1;
}


/*
int main() {
	int t;
	do {
		t = welcome();
		if(t == 0) {
			continue;
		}
	} while(t != -1);
		
	return 0;
}
 */

int main() {
	FILE* fin = fopen("UserInfo.txt", "r");
	Visitor v;
	fread(&v, sizeof(Visitor), 1, fin);
	while(!feof(fin)) {
		printf("%s %s %s %d %d %d %d\n", v.ID, v.pwd, v.Tel, v.num, v.type, v.MinAge, v.MaxAge);
		fread(&v, sizeof(Visitor), 1, fin);
	}
	system("pause");
	return 0;
}